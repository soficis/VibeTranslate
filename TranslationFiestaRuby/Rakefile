# Conditionally load development dependencies
begin
  require 'rspec/core/rake_task'
  require 'rubocop/rake_task'

  RSpec::Core::RakeTask.new(:spec)
  RuboCop::RakeTask.new

  task default: [:rubocop, :spec]
rescue LoadError
  # Development dependencies not available
  task default: []

  task :spec do
    puts "RSpec not available. Run 'bundle install --with development' to install development dependencies."
  end

  task :rubocop do
    puts "RuboCop not available. Run 'bundle install --with development' to install development dependencies."
  end
end

desc 'Run the TranslationFiesta application'
task :run do
  require_relative 'lib/translation_fiesta'
  TranslationFiesta::Application.new.run
end

desc 'Run the CLI version'
task :cli do
  require_relative 'lib/translation_fiesta'
  TranslationFiesta::CLI.new.run(ARGV)
end

desc 'Setup database'
task :setup_db do
  require_relative 'lib/translation_fiesta/data/database_setup'
  TranslationFiesta::Data::DatabaseSetup.new.create_tables
end

desc 'Start the Sinatra web UI (TF_USE_MOCK=1 to enable mock translations)'
task :web do
  sh "ruby bin/translation_fiesta"
end

desc 'Start web UI and open default browser'
task 'web:open' do
  port = ENV.fetch('TF_WEB_PORT', '4567')
  url = "http://127.0.0.1:#{port}"
  Thread.new { sleep 1; system("start #{url}") }
  sh "ruby bin/translation_fiesta"
end